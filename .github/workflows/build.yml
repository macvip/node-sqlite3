name: build

on:
  workflow_dispatch:
    inputs: {}

env:
  NODE_BUILD_CMD: npx --no-install prebuild -r node -t 18.0.0 -t 20.0.0 -t 21.0.0 --include-regex 'node_sqlite3.node$'
  ELECTRON_BUILD_CMD: npx --no-install prebuild -r electron -t 16.0.0 -t 17.0.0 -t 18.0.0 -t 19.0.0 -t 20.0.0 -t 21.0.0 -t 22.0.0 -t 23.0.0 -t 24.0.0 -t 25.0.0 -t 26.0.0 -t 27.0.0 -t 28.0.0 -t 29.0.0 -t 30.0.0 --include-regex 'node_sqlite3.node$'

jobs:
  test:
    strategy:
      matrix:
        os:
          - windows-2019
        node:
          - 18
          - 20
          - 21
    name: Testing Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - if: ${{ startsWith(matrix.os, 'windows') }}
        run: pip.exe install setuptools
      - run: npm install --ignore-scripts
      - run: npm run build-debug
      - run: npm test

  prebuild:
    strategy:
      matrix:
        os:
          - windows-2019
    name: Prebuild on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 16
      - if: ${{ startsWith(matrix.os, 'windows') }}
        run: pip.exe install setuptools
      - run: npm install --ignore-scripts
      - run: ${{ env.NODE_BUILD_CMD }} -u ${{ secrets.GITHUB_TOKEN }}
      - run: ${{ env.ELECTRON_BUILD_CMD }} -u ${{ secrets.GITHUB_TOKEN }}
      - if: matrix.os == 'windows-2019'
        run: |
          npx --no-install prebuild -r node -t 20.0.0 -t 21.0.0 --include-regex 'node_sqlite3.node$' --arch arm64 -u ${{ secrets.GITHUB_TOKEN }}
          ${{ env.ELECTRON_BUILD_CMD }} --arch arm64 -u ${{ secrets.GITHUB_TOKEN }}

  prebuild-alpine:
    name: Prebuild on alpine
    runs-on: ubuntu-latest
    container: node:16-alpine

    steps:
      - uses: actions/checkout@v4
      - run: apk add build-base git python3 py3-setuptools --update-cache
      - run: npm install --ignore-scripts
      - run: ${{ env.NODE_BUILD_CMD }} -u ${{ secrets.GITHUB_TOKEN }}

  prebuild-alpine-arm:
    strategy:
      matrix:
        arch:
          - arm64
    name: Prebuild on alpine (${{ matrix.arch }})
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - run: |
          docker run --rm -v $(pwd):/tmp/project --entrypoint /bin/sh --platform linux/${{ matrix.arch }} node:16-alpine -c "\
          apk add build-base git python3 py3-setuptools --update-cache && \
          cd /tmp/project && \
          npm install --ignore-scripts && \
          ${{ env.NODE_BUILD_CMD }} -u ${{ secrets.GITHUB_TOKEN }}"

  prebuild-linux-arm:
    strategy:
      matrix:
        arch:
          - arm64
    name: Prebuild on Linux (${{ matrix.arch }})
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - run: |
          docker run --rm -v $(pwd):/tmp/project --entrypoint /bin/sh --platform linux/${{ matrix.arch }} node:16 -c "\
          cd /tmp/project && \
          npm install --ignore-scripts && \
          ${{ env.NODE_BUILD_CMD }} -u ${{ secrets.GITHUB_TOKEN }}"
